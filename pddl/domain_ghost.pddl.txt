(define (domain domain_ghost)
	
	(:requirements :typing )

	(:types location)

	(:predicates      (pacmanAt ?p -location) ;; true iff Pacman at position p
				(ghostAt ?p -location)	;; true iff opposite ghost at position p
				(wallAt ?p -location)	;; true iff wall at postion p (the destination)
				;;(adjacent ?p1 ?p2) ;; true iff p1osition1 and position2 are adjacent
				(powered ?)	;; true iff the pacman has been powered
				;; scared here????
	)
	;;
	;;被吃也写在这里吗
	(:action move : parameters (?p1 ?p2 -location) ;;move from p1 to p2
				:precondition (and   (ghostAt ?p1)
								(not (wall ?p))
								;;(adjacent ?p1 ?p2)
							)
				:effect (and      (ghostAt ?p2)
							(not (ghostAt ?p1))
							(when (and (pacmanAt ?p2)) 
							           (and (not (powered)))
									(not (pacmanAt p2));;scared here???
					   )					
	)

)